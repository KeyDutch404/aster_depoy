---
# ansible/roles/prepare/tasks/main.yml
- name: Update APT cache and install available updates
  remote_user: root
  apt:
    upgrade: yes
    update_cache: yes

- name: Установка необходимых пакетов
  remote_user: root
  apt:
    name: "{{ item }}"
    state: present
  tags:
    - system
  loop:
    - sngrep
    - vim
    - mc
    - git
    - wget
    - git-core
    - subversion
    - libjansson-dev
    - sqlite
    - autoconf
    - automake
    - libxml2-dev
    - libncurses5-dev
    - libtool
    - unzip
    - uuid-dev
    - ncdu
    - htop
    - mariadb-server
    - unixodbc
    - unixodbc-dev
    - lame
    - odbcinst
  tags:
    - system
    -
- name: Check if Asterisk sources directory exists
  remote_user: root
  stat:
    path: "/usr/local/src/asterisk-{{ asterisk_version }}"
  register: asterisk_sources_check

- name: Download Asterisk source code
  remote_user: root
  ansible.builtin.get_url:
    url: "http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-{{ asterisk_version }}.tar.gz"
    dest: "/usr/local/src"
  when: not asterisk_sources_check.stat.exists

- name: Unarchive Asterisk source code
  remote_user: root
  ansible.builtin.unarchive:
    copy: false
    src: "/usr/local/src/asterisk-{{ asterisk_version }}.tar.gz"
    dest: /usr/local/src
  when: not asterisk_sources_check.stat.exists

- name: Update Asterisk sources directory name — find current directory
  remote_user: root
  shell: "find /usr/local/src -maxdepth 1 -type d -name 'asterisk-*'"
  register: asterisk_directory
  when: not asterisk_sources_check.stat.exists

- name: Update Asterisk sources directory name - rename directory
  remote_user: root
  shell: "mv {{ asterisk_directory.stdout }} /usr/local/src/asterisk-{{ asterisk_version }}"
  when: not asterisk_sources_check.stat.exists

- name: Get Asterisk MP3 sources
  remote_user: root
  shell: ./contrib/scripts/get_mp3_source.sh
  args:
    chdir: "/usr/local/src/asterisk-{{ asterisk_version }}"
    executable: /bin/bash
  when: not asterisk_sources_check.stat.exists

- name: Install Asterisk dependencies
  remote_user: root
  shell: ./contrib/scripts/install_prereq install
  when: not asterisk_sources_check.stat.exists
  args:
    chdir: "/usr/local/src/asterisk-{{ asterisk_version }}"
    executable: /bin/bash

- name: file limits
  ansible.builtin.template:
    src: limits.conf
    dest: /etc/security/limits.conf

